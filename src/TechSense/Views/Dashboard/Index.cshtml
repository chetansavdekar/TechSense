@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

@using TechSense.POCO;
@using System.Text;

@model DashboardModel

<form id="frmMain">
    @Html.Partial("DisplayError")
    <br />
    <script type="text/javascript">
        var technologyHash = {};
        var subcategoryHash = {};
        var priorityHash = {};
        var statusHash = {};
        var tag = [];
        @foreach (TagEntity t in Model.TagList)
        {
            <text>
                tag.push({label: @Html.Raw(Json.Serialize(t.RowKey)), value:@t.ID, hv: @Html.Raw(Json.Serialize(t.RowKey.Trim().ToLower().Replace(" ", "")))});
        </text>
        }
        @foreach (SelectListItem priority in Html.GetEnumSelectList<Priority>())
        {
            <text>
                priorityHash['@priority.Value'] = "@priority.Text";
            </text>
        }
        @foreach (SelectListItem status in Html.GetEnumSelectList<Status>())
        {
            <text>
                statusHash['@status.Value'] = "@status.Text";
            </text>
        }
    </script>
    <div class="container-fluid" style="padding: 0px;">
        <div class="col-sm-8" style="margin:0px !important; padding: 0px !important;">
            <ul class="nav nav-tabs nav-justified">
                @foreach (CategoryEntity category in Model.Categories)
            {
                    <li @Html.Raw(category.ID.Equals(Model.CurrentCategoryID) ? " class='active'" : "") onclick="categoryClick('@category.ID')"><a data-toggle="tab" href="#cattab_@(category.ID)">@category.Name</a></li>
                }
            </ul>
            <input type="hidden" id="CurrentCategoryID" name="CurrentCategoryID" value="@Model.CurrentCategoryID" />
            <div class="tab-content">
                @foreach (CategoryEntity category in Model.Categories)
            {
                    <div id="cattab_@(category.ID)" class="cat-data-calc tab-pane fade @(category.ID.Equals(Model.CurrentCategoryID) ? " in active ":"")">
                        <table class="table table-bordered" style="table-layout: fixed !important; width: 100% !important;">
                            <tr>
                                <th style="width:45px !important;">&nbsp;</th>
                                @foreach (SelectListItem status in Html.GetEnumSelectList<Status>())
                                {
                                    <th style="width: 20% !important;text-align:center; vertical-align:middle;">@status.Text</th>
                                }
                            </tr>
                            @foreach (CategoryEntity subcategory in Model.Subcategories[category.ID])
                            {
                                <tr>
                                    <th style="width:45px !important; text-align:center; vertical-align: middle !important;white-space:nowrap;">
                                        <p style="writing-mode: vertical-lr;display:inline-block;transform:rotate(-180deg);white-space:nowrap;">
                                            <a asp-controller="Technology" asp-action="Index" asp-route-category="@category.ID" asp-route-subcategory="@subcategory.ID" style="text-decoration: none;">@subcategory.Name</a>
                                        </p>
                                        <script type="text/javascript">subcategoryHash['@subcategory.ID'] = '@subcategory.Name';</script>
                                    </th>
                                    @foreach (SelectListItem status in Html.GetEnumSelectList<Status>())
                                    {
                                        <td>
                                            <div id="div_@(category.ID)_@(subcategory.ID)_@(@status.Value)" class="tech-container">
                                                @foreach (TechnologyEntity tech in Model.Technologies[category.ID].Where(t => t.SubcategoryID.Equals(subcategory.ID) && t.Status == int.Parse(status.Value)).OrderBy(t => t.Priority).ThenBy(t => t.Name))
                                                {
                                                    StringBuilder cls = new StringBuilder();
                                                    cls.Append(" ");
                                                    foreach (string tag in tech.Tag.Split(new char[] { '|' }, StringSplitOptions.RemoveEmptyEntries))
                                                    {
                                                        if (!string.IsNullOrEmpty(tag?.Trim()))
                                                        {
                                                            cls.Append("ts-t-" + tag.Trim() + " ");
                                                            Model.StyleIDForTags.Add(tag.Trim());
                                                        }

                                                    }

                                                    cls.Append("ts-p-" + tech.Priority.ToString() + " ");
                                                    cls.Append("ts-p-0 ");

                                                    <div id="div_@(category.ID)_@(subcategory.ID)_@(@status.Value)_@(tech.ID)" class="@cls" style="margin-bottom: 5px !important">
                                                        <input id="btn_@(category.ID)_@(subcategory.ID)_@(@status.Value)_@(tech.ID)" type="button"
                                                               class="btn btn-xs tech-button btn-block" style="white-space:normal !important; text-align:left !important; text-decoration: none;outline: 0px !important;"
                                                               value="@tech.Name" onclick="technologyClick('@(tech.ID)')" />
                                                        <script type="text/javascript">
                                                            technologyHash['@tech.ID'] = {
                                                                RowKey: '@tech.RowKey',
                                                                CategoryID: '@tech.PartitionKey',
                                                                SubcategoryID: '@tech.SubcategoryID',
                                                                Tag: '@tech.Tag',
                                                                Description: '@tech.Description',
                                                                Priority: '@tech.Priority',
                                                                Status: '@tech.Status'
                                                            };
                                                        </script>
                                                    </div>
                                                }
                                            </div>
                                        </td>
                                    }
                                </tr>
                            }
                        </table>
                    </div>
                }
            </div>
        </div>
        <div class="col-sm-4" style="padding-right: 0px">
            <b>Filter By:</b>
            <div class="input-group input-group-full-width">
                <span class="input-group-addon">Priority</span>
                <select id="Priority" name="Priority" class="form-control" onchange="priorityChange()" asp-for="Priority" asp-items="Html.GetEnumSelectList<Priority>()">
                    <option value="0">--ALL--</option>
                </select>
            </div>
            <br />
            <div class="input-group input-group-full-width">
                <span class="input-group-addon">Top</span>
                <input type="text" id="Top" name="Top" class="form-control" asp-for="@Model.Top" onchange="filterChanged(); refreshTab();" />
            </div>
            <br />
            <div class="input-group input-group-full-width">
                <span class="input-group-addon">Tags</span>
                <input id="TagAutoComplete" name="TagAutoComplete" type="text" style="width:100% !important">
            </div>
            <input type="hidden" id="Tag" name="Tag" asp-for="@Model.Tag" />
            <div id="divTagAutoComplete">
                @if (!string.IsNullOrEmpty(Model.Tag?.Trim()))
                {
                    @foreach (string t in Model.Tag.Trim().Split(new char[] { '|' }, StringSplitOptions.RemoveEmptyEntries))
                    {
                        if (t.Trim().Length > 0)
                        {
                            TagEntity te = Model.TagList.FirstOrDefault(tl => tl.ID == int.Parse(t.Trim()));

                            if (te != null)
                            {
                                <div id='T@(te.ID)' class='btn-group btn-group-xs' style='margin: 3px'>
                                    <input type='button' value='@te.RowKey' style='cursor: default !important; outline: 0px !important;' class='btn disabled disabled-button-color' />
                                    <input type='button' value='x' class='btn' style='outline: 0px !important' onclick="removeTagFromSelected('#frmMain', '@te.ID')" />
                                </div>
                            }
                        }
                    }
                }
            </div>
            <div id="technologyDetails" class="hidden">
                <hr style="border-top: 1px solid #8c8b8b;" />
                <div class="form-group">
                    <label>Sub Category</label>
                    <label id="DisplaySubcategory" class="form-control" style="height: auto !important;"></label>
                </div>
                <div class="form-group">
                    <label>Name</label>
                    <label id="DisplayName" class="form-control" style="height: auto !important;"></label>
                </div>
                <div class="form-group">
                    <label>Tags</label>
                    <label id="DisplayTag" style="white-space: pre-line; height: auto !important;" class="form-control"></label>
                </div>
                <div class="form-group">
                    <label>Description
                    </label>
                    <label id="DisplayDescription" style="white-space: pre-line; height: auto !important;" class="form-control"></label>
                </div>
                <div class="form-group">
                    <label>
                        Priority
                    </label>
                    <label id="DisplayPriority" class="form-control" style="height: auto !important;"></label>
                </div>
                <div class="form-group">
                    <label>
                        Status
                    </label>
                    <input id="DisplayStatusBtn" type="button" value="show history" style="text-decoration: none; outline: none;" class="btn btn-xs btn-link" onclick="showStatusHistory()" />
                    <input id="DisplayStatusCurrentPartitionKey" type="hidden" />
                    <input id="DisplayStatusCurrentRowKey" type="hidden" />
                    <div id="DisplayStatus" style="height: auto !important;">
                        <div id="DisplayStatusError" class='alert alert-danger'>Error occurred. Please try again.</div>
                        <div id="DisplayStatusLoading" style='text-align:center;'><img src='/images/loading.gif' /><br /></div>
                        <label id="DisplayStatusText" class="form-control" style="height: auto !important;"></label>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

@section scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            addAutocomplete("#frmMain", $("#frmMain").find("#TagAutoComplete"), tag, $("#frmMain").find("#divTagAutoComplete"), $("#frmMain").find("#Tag"));

            refreshTab();
        });
        function categoryClick(categoryID) {
            if ($("#CurrentCategoryID").val() !== categoryID) {
                $("#CurrentCategoryID").val(categoryID);
                refreshTab();
            }
        }

        function showStatusHistory() {
            $("#technologyDetails").find("#DisplayStatusBtn").addClass("disabled");

            var divID = $("#DisplayStatusCurrentPartitionKey").val() + "_" + $("#DisplayStatusCurrentRowKey").val();
            $("#DisplayStatus_" + divID).remove();

            $("#technologyDetails").find("#DisplayStatusText").text("");
            $("#technologyDetails").find("#DisplayStatusText").addClass("hidden");
            $(".status-table").each(function(index, element) { $(element).addClass("hidden"); });

            $("#DisplayStatusLoading").removeClass("hidden");

            $.get("Technology/StatusHistory?PartitionKey=" + $("#DisplayStatusCurrentPartitionKey").val() + 
                                                "&RowKey=" + $("#DisplayStatusCurrentRowKey").val(), 
            function (data) {
                $("#DisplayStatus").append(data);
                var currentdivID = $("#DisplayStatusCurrentPartitionKey").val() + "_" + $("#DisplayStatusCurrentRowKey").val();

                var elements = $(data);
                var processedDivID = "";
                if ($("#finished", elements).length){
                    processedDivID = $("#finished", elements).val();
                }
                
                if (currentdivID.trim() === processedDivID.trim())
                {
                    $("#DisplayStatus_" + processedDivID).removeClass("hidden");

                    $("#DisplayStatusLoading").addClass("hidden");
                    $("#technologyDetails").find("#DisplayStatusBtn").val("refresh history");
                    $("#technologyDetails").find("#DisplayStatusBtn").removeClass("disabled");
                }
                else
                {
                    $("#DisplayStatus_" + processedDivID).addClass("hidden");
                }
            }).fail(function(){
                $("#technologyDetails").find("#DisplayStatusLoading").addClass("hidden");
                $("#technologyDetails").find("#DisplayStatusText").text("");
                $("#technologyDetails").find("#DisplayStatusText").addClass("hidden");
                $(".status-table").each(function(index, element) { $(element).addClass("hidden"); });

                $("#technologyDetails").find("#DisplayStatusError").removeClass("hidden");

                $("#technologyDetails").find("#DisplayStatusBtn").val("show history");
                $("#technologyDetails").find("#DisplayStatusBtn").removeClass("disabled");
            });
        }

        function technologyClick(id)
        {
            clearTechnologyDetails();

            showTechnologyDetails(id);
        }

        function clearTechnologyDetails(){
            var btns = $(".tech-button.tech-selected");
            btns.each(function(index, element) { $(element).removeClass("btn-info disabled tech-selected font-weight-bold"); });
            //console.log(btns.length);

            $("#technologyDetails").addClass("hidden");

            $("#technologyDetails").find("#DisplayStatusCurrentPartitionKey").val("");
            $("#technologyDetails").find("#DisplayStatusCurrentRowKey").val("");
            $("#technologyDetails").find("#DisplaySubcategory").text("");
            $("#technologyDetails").find("#DisplayName").text("");
            $("#technologyDetails").find("#DisplayTag").text("");
            $("#technologyDetails").find("#DisplayDescription").text("");
            $("#technologyDetails").find("#DisplayPriority").text("");
            $("#technologyDetails").find("#DisplayStatusError").addClass("hidden");
            $("#technologyDetails").find("#DisplayStatusLoading").addClass("hidden");
            $("#technologyDetails").find("#DisplayStatusText").text("");
            $("#technologyDetails").find("#DisplayStatusText").addClass("hidden");
            $(".status-table").each(function(index, element) { $(element).addClass("hidden"); });
        }

        function showTechnologyDetails(id){

            var tech = technologyHash[id];

            if (tech === undefined || tech === "undefined" || tech === null) {
                clearTechnologyDetails();
                return;
            }

            $("#technologyDetails").find("#DisplayStatusCurrentPartitionKey").val(tech.CategoryID);
            $("#technologyDetails").find("#DisplayStatusCurrentRowKey").val(tech.RowKey);


            var $btn = $("#btn_" + tech.CategoryID + "_" + tech.SubcategoryID + "_" + tech.Status + "_" + id);
            $btn.addClass("btn-info disabled tech-selected font-weight-bold");

            $("#technologyDetails").find("#DisplaySubcategory").html("<a style='text-decoration:none;' href='Technology/Index?category=" + tech.CategoryID + "&subcategory=" + tech.SubcategoryID + "'>" + decodeEntities(subcategoryHash[tech.SubcategoryID]) + "</a>");
            $("#technologyDetails").find("#DisplayName").html("<a style='text-decoration:none;' href='Technology/Index?category=" + tech.CategoryID + "&subcategory=" + tech.SubcategoryID + "&technology=" + id + "'>" + decodeEntities($btn.val()) + "</a>");
            $("#technologyDetails").find("#DisplayTag").text(getAllTagText(tech.Tag));
            $("#technologyDetails").find("#DisplayDescription").html((tech.Description.length == 0 ? "-" : tech.Description));
            $("#technologyDetails").find("#DisplayPriority").text(priorityHash[tech.Priority]);

            $("#technologyDetails").find("#DisplayStatusError").addClass("hidden");
            
            if ($("#DisplayStatus_" + tech.CategoryID + "_" + tech.RowKey).length)
            {
                $("#technologyDetails").find("#DisplayStatusText").text("");
                $("#technologyDetails").find("#DisplayStatusText").addClass("hidden");

                $("#technologyDetails").find("#DisplayStatusBtn").val("refresh history");

                if ($("#DisplayStatus_" + tech.CategoryID + "_" + tech.RowKey).find("#finished").length)
                {
                    $("#technologyDetails").find("#DisplayStatusLoading").addClass("hidden");
                    $("#DisplayStatus_" + tech.CategoryID + "_" + tech.RowKey).removeClass("hidden");
                    $("#technologyDetails").find("#DisplayStatusBtn").removeClass("disabled");
                }
                else
                {
                    $("#technologyDetails").find("#DisplayStatusLoading").removeClass("hidden");
                    $("#DisplayStatus_" + tech.CategoryID + "_" + tech.RowKey).addClass("hidden");
                    $("#technologyDetails").find("#DisplayStatusBtn").addClass("disabled");
                }
            }
            else
            {
                $("#technologyDetails").find("#DisplayStatusLoading").addClass("hidden");
                $(".status-table").each(function(index, element) { $(element).addClass("hidden"); });
                $("#technologyDetails").find("#DisplayStatusText").html(statusHash[tech.Status]);
                $("#technologyDetails").find("#DisplayStatusText").removeClass("hidden");
                $("#technologyDetails").find("#DisplayStatusBtn").val("show history");
                $("#technologyDetails").find("#DisplayStatusBtn").removeClass("disabled");
            }
            

            $("#technologyDetails").removeClass("hidden");
        }

        function getTagText(tagID) {
            if (!$.isNumeric(tagID)) {
                return "";
            }

            var result = $.grep(tag, function (e) { return parseInt(e.value) === parseInt(tagID); });

            if (result.length == 0) {
                return "";
            }
            else {
                return decodeEntities(result[0].label);
            }
        }

        function getAllTagText(tagIDs) {
            var allTagText = "";

            if (tagIDs.length > 0) {
                var selectedTags = tagIDs.split("|");
                for (var sti = 0; sti < selectedTags.length; sti++) {
                    if (selectedTags[sti].trim().length > 0) {
                        var tagText = getTagText(selectedTags[sti]);
                        if (tagText.length > 0) {
                            allTagText = allTagText + (allTagText.length > 0 ? ", " : "") + tagText;
                        }
                    }
                }
            }

            allTagText = (allTagText.trim().length === 0 ? "-" : allTagText);

            return allTagText;
        }

        function decodeEntities(encodedString) {
            var textArea = document.createElement('textarea');
            textArea.innerHTML = encodedString;
            return textArea.value;
        }

        function filterChanged()
        {
            var divs = $("div[id^='cattab_']");
            for(var i = 0; i < divs.length; i++)
            {
                $(divs[i]).addClass("cat-data-calc");
            }
        }

        function refreshTab() {
            clearTechnologyDetails();

            var id = $("#CurrentCategoryID").val();
            var priority = $("#Priority").val();
            var top = $("#Top").val();
            var tags = $("#Tag").val();
            var tagsArray = [];

            if ($.isNumeric(top.trim())) {
                top = parseInt(top.trim());
            }
            else {
                top = 9999;
            }
            if (top <= 0)
            {
                top = 9999;
            }

            tags = tags.split('|');
            for(var i = 0; i < tags.length; i++)
            {
                if (tags[i].trim().length > 0)
                {
                    tagsArray.push("ts-t-" + tags[i].trim());
                }
            }


            //console.log(id + "_" + priority + "_" + top + "_" +tags);

            if (!$("#cattab_" + id).hasClass("cat-data-calc"))
            {
                return;
            }

            //console.log("do it!!");

            var divs = $("div[id^='" + "div_" + id + "_" + "'][class='tech-container']");
            var visibleCount = 0;
            //console.log(divs.length)
            for(var i =0;i<divs.length;i++)
            {
                //console.log($(divs[i]).prop("id"));
                visibleCount = 0;

                var techdivs = $("div[id^='" + $(divs[i]).prop("id") + "_" + "']");

                for(var ii = 0;ii < techdivs.length;ii++)
                {
                    //console.log($(techdivs[ii]).prop("id"));
                    if (visibleCount < top)
                    {
                        if ($(techdivs[ii]).hasClass("ts-p-" + priority) && hasTags($(techdivs[ii]), tagsArray))
                        {
                            $(techdivs[ii]).removeClass("hidden");
                            visibleCount = visibleCount + 1;
                        }
                        else
                        {
                            $(techdivs[ii]).addClass("hidden");
                        }
                    }
                    else
                    {
                        $(techdivs[ii]).addClass("hidden");
                    }
                }
            }

            $("#cattab_" + id).removeClass("cat-data-calc")
        }

        function hasTags($tech, tags)
        {
            if (tags.length === 0)
            {
                return true;
            }

            for (var i = 0; i < tags.length; i++)
            {
                if ($tech.hasClass(tags[i]))
                {
                    return true;
                }
            }

            return false;
        }

        function priorityChange(){
            filterChanged();
            refreshTab();
        }

        function removeTagFromSelected(formName, id) {
            $ctlAppend = $(formName).find("#Tag");

            $ctlAppend.val($ctlAppend.val().replace("|" + id + "|", "|"));

            $("#T" + id.trim().toLowerCase().replace(/ /g, '')).remove();

            filterChanged();
            refreshTab();
        }

        function addAutocomplete(formName, $ctl, data, $ctlDivAppend, $ctlAppend) {
            var options = {
                data: data,
                adjustWidth: false,
                placeholder: "Enter Tag",
                highlightPhrase: true,
                getValue: "label",
                list: {
                    match: {
                        enabled: true
                    },
                    onChooseEvent: function () {
                        $ctl.val("");

                        if ($ctlAppend.val().indexOf("|" + $ctl.getSelectedItemData().value + "|") < 0) {
                            var d = "<div id='T" + $ctl.getSelectedItemData().value + "' class='btn-group btn-group-xs' style='margin: 3px'>";

                            d = d + "<input type='button' value='" + $ctl.getSelectedItemData().label + "' style='cursor: default !important; outline: 0px !important;' class='btn disabled disabled-button-color' />"
                            d = d + "<input type='button' value='x' class='btn' style='outline: 0px !important' onclick='removeTagFromSelected(\"" + formName + "\", \"" + $ctl.getSelectedItemData().value + "\")' />"
                            d = d + "</div>";

                            $ctlDivAppend.append(d);

                            $ctlAppend.val($ctlAppend.val() + ($ctlAppend.val().trim().length === 0 ? "|" : "") + $ctl.getSelectedItemData().value + "|");

                            filterChanged();
                            refreshTab();
                        }
                    }
                }
            };

            var txtBox = $ctl.easyAutocomplete(options);
            txtBox.keypress(function (e) {
                var code = (e.keyCode ? e.keyCode : e.which);
                if (code == 13) {
                    return false;
                }
            });

            txtBox.change(function (e) { });

        }

    </script>
}

@section styles
{
    <style>
        html {
            overflow-y: scroll;
        }

        .input-group-addon {
            width: 70px;
            text-align: left;
        }

        .input-group-full-width {
            width: 100%;
        }

        .disabled-button-color {
            color: #000000 !important;
            background-color: #d4d4d4 !important;
            font-weight: bold;
        }

        .easy-autocomplete-container {
            z-index: 999 !important;
            max-height: 150px;
            overflow: auto;
            overflow-y: auto;
            overflow-x: hidden;
        }

        .nav-tabs > li.active > a,
        .nav-tabs > li.active > a:focus,
        .nav-tabs > li.active > a:hover {
            color: #fff;
            font-weight: bold;
            background-color: #333;
        }

        .nav-tabs > li > a,
        .nav-tabs > li > a:focus,
        .nav-tabs > li > a:hover {
            color: #333;
            background-color: #9d9d9d;
            border-color: #fff;
        }

            .nav-tabs > li > a:focus,
            .nav-tabs > li > a:hover {
                color: #fff;
            }

        .tech-container {
        }

        .tech-selected {
            cursor: default !important;
            color: #fff !important;
            background-color: #31b0d5 !important;
            border-color: #1b6d85 !important;
        }

            .tech-selected:hover {
                cursor: default !important;
                color: #fff !important;
                background-color: #31b0d5 !important;
                border-color: #1b6d85 !important;
            }

            .tech-selected:focus {
                cursor: default !important;
                color: #fff !important;
                background-color: #31b0d5 !important;
                border-color: #1b6d85 !important;
            }

        .cat-data-calc {
        }
        .status-table {

        }
    </style>
    <style>
        @foreach (string s in Model.StyleIDForTags)
        {
            @:.ts-t-@s {  }
        }
        @foreach (SelectListItem status in Html.GetEnumSelectList<Priority>())
        {
            @:.ts-p-@status.Value { }
        }
    </style>
}
